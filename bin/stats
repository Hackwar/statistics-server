#!/usr/bin/env php
<?php

require dirname(__DIR__) . '/boot.php';

use Joomla\Application\AbstractApplication;
use Joomla\Application\AbstractCliApplication;
use Joomla\DI\Container;
use Joomla\Input\Cli;
use Joomla\Input\Input;
use Monolog\Logger;
use Psr\Log\LoggerInterface;
use Stats\CliApplication;
use Stats\Providers\ApplicationServiceProvider;
use Stats\Providers\CacheServiceProvider;
use Stats\Providers\ConfigServiceProvider;
use Stats\Providers\DatabaseServiceProvider;
use Stats\Providers\GitHubServiceProvider;
use Stats\Providers\MonologServiceProvider;

$container = (new Container)
	->registerServiceProvider(new ApplicationServiceProvider)
	->registerServiceProvider(new CacheServiceProvider)
	->registerServiceProvider(new ConfigServiceProvider(APPROOT . '/etc/config.json'))
	->registerServiceProvider(new DatabaseServiceProvider)
	->registerServiceProvider(new GitHubServiceProvider)
	->registerServiceProvider(new MonologServiceProvider);

// Alias the CLI application to Joomla's base application class as this is the primary application for the environment
$container->alias(AbstractApplication::class, AbstractCliApplication::class);

// Alias the `monolog.logger.cli` service to the Monolog Logger class and PSR-3 interface as this is the primary logger for the environment
$container->alias(Logger::class, 'monolog.logger.cli')
	->alias(LoggerInterface::class, 'monolog.logger.cli');

// Alias the Joomla\Input\Input service to the CLI input class (overloads the original definition)
$container->alias(Input::class, Cli::class);

// Force error reporting to maximum
error_reporting(-1);
ini_set('display_errors', true);

// Execute the application
try
{
	$container->get(CliApplication::class)->execute();
}
catch (\Throwable $e)
{
	fwrite(STDOUT, "\nERROR: " . $e->getMessage() . "\n");
	fwrite(STDOUT, "\n" . $e->getTraceAsString() . "\n");

	if ($prev = $e->getPrevious())
	{
		fwrite(STDOUT, "\n\nPrevious Exception: " . $prev->getMessage() . "\n");
		fwrite(STDOUT, "\n" . $prev->getTraceAsString() . "\n");
	}

	exit(1);
}
